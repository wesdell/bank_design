@startuml
class Account {
  - paymentTools: SavingPaymentTool[]
  - amount: double
  - maintenanceCost: double
  + deposit(double): void
  + getAmount(): double
  + isPositiveNumber(double): boolean
  + toString(): String
  + getMaintenanceCost(): void
  + setAmount(double): void
  + takeOut(double): void
  # getServicesAmount(): int
}
class Bank {
  - clients: Client[]
  - name: String
  - registeredClients: int
  + createCheckingAccount(Client, double): CheckingAccount
  + createSavingAccount(NaturalClient): SavingAccount
  - addClient(Client): void
  + toString(): String
}
class CheckBook
class CheckingAccount {
  - checkBook: CheckBook
  + DEBT_LIMIT: double
  + takeOut(double): void
  # getServicesAmount(): int
}
class Client {
  - registeredAccounts: int
  - name: String
  - accounts: Account[]
  + isValidAmountToGetSavingAccount(double): boolean
  + addAccount(Account): void
}
class DebitCard
class LegalClient {
  + isValidAmountToGetSavingAccount(double): boolean
}
class Main {
  + main(String[]): void
}
class NaturalClient {
  + isValidAmountToGetSavingAccount(double): boolean
}
class OnlineBank
class PaymentTool
class SavingAccount {
  + INTEREST_PERCENTAGE: double
  # getServicesAmount(): int
  + takeOut(double): void
}
class SavingBook
class SavingPaymentTool

CheckBook          --|>  PaymentTool
CheckingAccount    --|>  Account
DebitCard          --|>  SavingPaymentTool
LegalClient        --|>  Client
NaturalClient      --|>  Client
OnlineBank         --|>  SavingPaymentTool
SavingAccount      --|>  Account
SavingBook         --|> SavingPaymentTool
SavingPaymentTool  --|>  PaymentTool
@enduml
